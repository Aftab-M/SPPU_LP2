#include <bits/stdc++.h>
#include <iostream>
#define V 9
using namespace std;


int minimum(vector<int> dist, vector<bool> sptSet){
    
    int min = INT_MAX, mini;
    
    for(int i=0; i<V; i++){
        if(sptSet[i]==false && dist[i]<min){
            min = dist[i];
            mini = i;
        }
    }   // for - i
    
    return mini;
    
}   // minimum()


void printSolution(vector<int> v){
    cout<<"Node\t\tDistance from source : \n";
    for(int i=0; i<V; i++){
        cout<<i<<"\t\t"<<v[i]<<endl;
    }
}   // printSolution()


void dijkstras(vector<vector<int>> v, int start){
    
    vector<int> dist(V, INT_MAX);
    vector<bool> sptSet(V, false);
    
    dist[start] = 0;
    
    for(int count = 0; count < V-1; count++){
        
        int u = minimum(dist, sptSet);
        sptSet[u] = true;
        
        for(int i = 0; i<V; i++){
            if(!sptSet[i] && v[u][i] && dist[u]!= INT_MAX
                && dist[u] + v[u][i] < dist[i]){
                    dist[i] = dist[u] + v[u][i];
                }   // if
        }   // for - i
        
        printSolution(dist);
        
    }   // for - count
    
}   // dijkstras()



int main()
{
    
    vector<vector<int>> v = {
        { 0, 4, 0, 0, 0, 0, 0, 8, 0 },
        { 4, 0, 8, 0, 0, 0, 0, 11, 0 },
        { 0, 8, 0, 7, 0, 4, 0, 0, 2 },
        { 0, 0, 7, 0, 9, 14, 0, 0, 0 },
        { 0, 0, 0, 9, 0, 10, 0, 0, 0 },
        { 0, 0, 4, 14, 10, 0, 2, 0, 0 },
        { 0, 0, 0, 0, 0, 2, 0, 1, 6 },
        { 8, 11, 0, 0, 0, 0, 1, 0, 7 },
        { 0, 0, 2, 0, 0, 0, 6, 7, 0 },
    };
    
    
    dijkstras(v, 0);
    
    
    cout<<"\n\nHello World";

    return 0;
}